#!/bin/bash
#########################################################
# 							#
# This is BashStyle-NG  				#
#							#
# Licensed under GNU GENERAL PUBLIC LICENSE v3    	#
#							#
# Copyright 2007 - 2019 Christopher Bratusek		#
#							#
#########################################################

is_number () {
	[[ ${1} =~ ^[+-]?[0-9]+([.,][0-9]+)?$ || \
		$((16#${1})) || \
		$((8#${1})) ]] 2>/dev/null \
		&& return 0 || return 1
}

is_int () {
	[[ ${1} =~ ^[+-]?[0-9]+$ ]] && return 0 || return 1
}

is_float () {
	[[ ${1} =~ ^[+-]?[0-9]+([.,][0-9]+)?$ ]] && return 0 || return 1
}

is_hex () {
	((16#${1})) 2>/dev/null && return 0 || return 1
}

is_octal () {
	((8#${1})) 2>/dev/null && return 0 || return 1
}

is_string () {
	! $(is_number ${1}) && return 0 || return 1
}

is_special () {
	[[ ! "${1}" =~ .*[[:xdigit:]].* ]] && return 0 || return 1
}

contains () {
	[[ "${1}" =~ .*${2}.* ]] && return 0 || return 1
}

starts_with () {
	[[ "${1}" =~ ^${2}.* ]] && return 0 || return 1
}

ends_with () {
	[[ "${1}" =~ .*${2}$ ]] && return 0 || return 1
}

is_hexcolor () {
	[[ "${1}" =~ ^[#]?([A-Fa-f0-9]{3}){1,2}$ ]] && return 0 || return 1
}

is_bool () {
	case ${1} in
		true | True | TRUE | false | False | FALSE | 0 | 1 ) return 0 ;;
		*                                                  ) return 1 ;;
	esac
}

is_true () {
	case ${1} in
		true | True | TRUE | 0 ) return 0 ;;
		*                      ) return 1 ;;
	esac
}

is_false () {
	case ${1} in
		false | False | FALSE | 1 ) return 0 ;;
		*                         ) return 1 ;;
	esac
}

###
#
# original version of the following:
#
# https://stackoverflow.com/questions/2138701/checking-correctness-of-an-email-address-with-a-regular-expression-in-bash/22689807#22689807
#
###

is_valid_address () {
	local regex="^[a-z0-9!#\$%&'*+/=?^_\`{|}~-]+(\.[a-z0-9!#$%&'*+/=?^_\`{|}~-]+)*@([a-z0-9]([a-z0-9-]*[a-z0-9])?\.)+[a-z0-9]([a-z0-9-]*[a-z0-9])?\$"
	[[ "${1}" =~ ${regex} ]] && return 0 || return 1
}

is_valid_domain () {
	dig "${1}" | grep "ANSWER: 1" 1>/dev/null && return 0 || return 1
}

is_mail () {
	local address="${1}"
	local domain="$(echo ${1} | gawk -F@ '{print $2}')"
	local status=0

	if ! is_valid_address "${address}"; then
		echo "invalid address \"${address}\""
		status=1
	else
		if ! is_valid_domain "${domain}"; then
			echo "domain \"${domain}\" unreachable"
			status=1
		fi
	fi

	return ${status}
}

case ${1} in
	n)	is_number "${2}"		;;
	i)	is_int "${2}"			;;
	f)	is_float "${2}"			;;
	h)	is_hex "${2}"			;;
	o)	is_octal "${2}"			;;
	hc)	is_hexcolor "${2}"		;;
	s)	is_string "${2}"		;;
	p)	is_special "${2}"		;;
	c)	contains "${2}" "${3}"		;;
	sw)	starts_with "${2}" "${3}"	;;
	ew)	ends_with "${2}" "${3}"		;;
	b)	is_bool "${2}"			;;
	bt)	is_true "${2}"			;;
	bf)	is_false "${2}"			;;
	m)	is_mail "${2}"			;;

	*)
		bashstyle-help -a "Christopher Roy Bratusek" -e "nano@jpberlin.de" -h "https://www.nanolx.org/"\
				-l "GNU GPL v3" -n "check" -s "additional tests" -v "${BSNG_VERSION}" -y "${BSNG_YEAR}"\
				-o "n:4 [4[,.]4|check if arg is any number"\
				-o "i:4|check if arg is integer"\
				-o "f:4[,.]4|check if arg is float"\
				-o "h:301DE8|check if arg is hex"\
				-o "o:24|check if arg is octal"\
				-o "hc:[#]FFFFFF|check if arg is valid hex color"\
				-o "s:test|check if arg is a string"\
				-o "p:+|check if arg is special character"\
				-o "c:testabc abc|check if arg1 contains arg2"\
				-o "sw:testabc t|check if arg1 starts with arg2"\
				-o "ew:14235 235|check if arg1 ends with arg2"\
				-o "b:\${VAR}|check if arg is a boolean"\
				-o "bt:\${VAR}|check if arg is boolean true"\
				-o "bf:\${VAR}|check if arg is boolean false"\
				-o "m:test@dom.tld|check if arg is valid mail address"
	;;
esac
