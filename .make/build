#!/bin/bash
#########################################################
# 							#
# This is BashStyle-NG  				#
#							#
# Licensed under GNU GENERAL PUBLIC LICENSE v3    	#
#							#
# Copyright 2007 - 2015 Christopher Bratusek		#
#							#
#########################################################

build_news () {
	echo -e "\t${WHITE}+ ${MAGENTA} NEWS file"
	makeinfo --no-validate  --no-headers doc/news.texi > NEWS
}

build_readme () {
	echo -e "\t${WHITE}+ ${MAGENTA} README file"
	makeinfo --no-validate  --no-headers doc/userdoc_introduction.texi > README
}

build_doc_info () {
	echo -e "\t${WHITE}+ ${MAGENTA} Info documentation"
	makeinfo -I ${PWD}/doc/ doc/userdoc.texi -o doc/bashstyle.info
}

build_doc_html () {
	echo -e "\t${WHITE}+ ${MAGENTA} HTML documenation"
	makeinfo -I ${PWD}/doc/ --html doc/userdoc.texi -o doc/html
}

do_gzip_man () {
	echo -e "\t${WHITE}+ ${MAGENTA} compressing manpages"
	for manpage in ${MAN_FILES[@]}; do
		gzip ${PWD}/${manpage/:*} -c > ${PWD}/${manpage/:*}.gz
	done
}

generate_pot () {

	echo -e "\t${WHITE}+ ${MAGENTA} translation templates"
	echo -e "\t${WHITE}  *${YELLOW} bs-ng.pot"
	intltool-extract --type=gettext/glade ui/bashstyle.ui >/dev/null
	xgettext -L python --keyword=_ --keyword=N_ --output=i18n/bs-ng.pot \
		ui/*.py ui/bashstyle.ui.h >/dev/null

	echo -e "\t${WHITE}  *${YELLOW} nx-rc.pot"
	xgettext -o i18n/nx-rc.pot -L shell rc/nx-rc rc/settings/*-rc 2>/dev/null

}

update_po () {

	if [[ ! -f i18n/bs-ng.pot || ! -f i18n/nx-rc.pot ]]; then
		echo -e "\n${RED}You need to run './make pot' first!\n"
		exit 1
	else
		echo -e "\t${WHITE}+ ${MAGENTA} gui translations"
		for lang in ${APP_LANGUAGES}; do
			echo -e "\t${WHITE}  *${SMOOTHBLUE} ${lang}"
			msgmerge -q -o i18n/${lang}/bs-ng.po \
				i18n/${lang}/bs-ng.po i18n/bs-ng.pot >/dev/null
		done

		echo -e "\t${WHITE}+ ${MAGENTA} nx-rc translations"
		for lang in ${APP_LANGUAGES}; do
			echo -e "\t${WHITE}  *${SMOOTHBLUE} ${lang}"
			msgmerge -q -o i18n/${lang}/nx-rc.po \
				i18n/${lang}/nx-rc.po i18n/nx-rc.pot >/dev/null
		done
	fi

}

generate_mo () {

	echo -e "\t${WHITE}+ ${MAGENTA} gui translations"
	for lang in ${APP_LANGUAGES}; do
		echo -e "\t${WHITE}  *${SMOOTHBLUE} ${lang}"
		msgfmt --output-file=i18n/${lang}/bs-ng.mo \
			i18n/${lang}/bs-ng.po
	done

	echo -e "\t${WHITE}+ ${MAGENTA} nx-rc translations"
	for lang in ${APP_LANGUAGES}; do
		echo -e "\t${WHITE}  *${SMOOTHBLUE} ${lang}"
		msgfmt --output-file=i18n/${lang}/nx-rc.mo \
			i18n/${lang}/nx-rc.po
	done

}
